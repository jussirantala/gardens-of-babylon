{
	"Create custom store action middleware": {
		"prefix": "act",
		"scope": "typescript",
		"body": [
			"interface $2Payload {",
			"\treadonly $3: $4;",
			"}\n",
			"interface $2Action extends Store.Action<$2Payload> {};\n",
			"export function $1($3: $4): $2Action {",
			"\treturn {",
			"\t\ttype: actions.$1,",
			"\t\tpayload: {",
			"\t\t\t$3,",
			"\t\t},",
			"\t};",
			"}",
		],
	},
	"Create a subscribed react component": {
		"prefix": "sub",
		"scope": "typescriptreact",
		"body": [
			"import React from 'react';",
			"import {Store} from 'types';",
			"import {useSelector} from 'react-redux';\n",
			"const $1: React.FC = () => {",
			"\tconst $2 = useSelector((store: Store.state) => store.$2);\n",
			"\treturn ($3);",
			"};\n",
			"export default $1;\n",
		],
	},
	"Create an action emmiter react component": {
		"prefix": "emitter",
		"scope": "typescriptreact",
		"body": [
			"import React from 'react';",
			"import {useDispatch} from 'react-redux';\n",
			"const $1: React.FC = () => {",
			"\tconst dispatch = useDispatch();\n",
			"\treturn ($2);",
			"};\n",
			"export default $1;\n",
		],
	},
}
